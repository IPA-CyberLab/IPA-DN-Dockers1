★☆ 登用のメモ ☆★


# イメージ名
dockervault_ghostunnel_client_1_6_1_go_1_19_x64

# バージョン
20221210_001

# イメージの目的
これは、Ubuntu 20.04 環境上の Ghostunnel 1.6.1 (Client の役割) の安定動作イメージである。


# ghostunnel-v1.6.1.tar.gz の生成方法 (参考)
# 任意のマシンで (dnt-ub1 等)
cd ~/

rm -fr ~/ghostunnel-v1.6.1/

mkdir -p ~/ghostunnel-v1.6.1/
cd ~/ghostunnel-v1.6.1/

git clone -b v1.6.1 --recursive https://github.com/ghostunnel/ghostunnel.git

rm -fr ~/ghostunnel-v1.6.1/ghostunnel/.git/

tar czvf ghostunnel-v1.6.1.tar.gz ghostunnel/

# \\dnt-ub1\root\root\ghostunnel-v1.6.1\
# に
# ghostunnel-v1.6.1.tar.gz
# が生成される。



# ビルド方法 (dn-docker1 にて)

## 初回のみ Git クローンする
cd ~/ && git clone --recursive https://github.com/IPA-CyberLab/IPA-DN-Dockers1.git

## ビルド実施
cd ~/IPA-DN-Dockers1/ && (cd $(git rev-parse --show-toplevel) && git pull origin master && git submodule update --init --recursive) && cd ~/IPA-DN-Dockers1/dockervault_ghostunnel_client_1_6_1_go_1_19_x64/ && docker build -t tmpimg01 . && echo Docker Image Build OK.

## 無事起動したら Ctrl + C で終了

# ビルドしたマシンにおける簡易動作テスト (必要な場合のみ) - bash 起動
mkdir -p /etc/ghostunnel_client/

docker run -it --rm --network host --mount type=bind,source=/etc/ghostunnel_client/,target=/etc/ghostunnel_client/ --env GHOSTUNNEL_CLIENT_LISTEN_HOST_AND_PORT=0.0.0.0:1433 --env GHOSTUNNEL_CLIENT_TUNNELSERVER_HOST_AND_PORT=103.41.61.188:443 --env GHOSTUNNEL_CLIENT_TUNNELSERVER_CERT_DNS_NAME=Sample_GhostTunnel_Server_CN tmpimg01 bash

中で

/usr/bin/supervisord

## 無事起動したら Ctrl + C で終了 -> exit で終了


# イメージ公開
docker login dockervault-auth.dn.ipantt.net

docker tag tmpimg01 dockervault-auth.dn.ipantt.net/dockervault_ghostunnel_client_1_6_1_go_1_19_x64:20221210_001

docker push dockervault-auth.dn.ipantt.net/dockervault_ghostunnel_client_1_6_1_go_1_19_x64:20221210_001





# 利用方法 (dn-docker2 でテスト可)

# Docker のインストール
sudo apt-get -y update && sudo apt-get -y install docker.io

# 証明書の準備
# sudo rm -fr /etc/ghostunnel_client/
sudo mkdir -p /etc/ghostunnel_client/
sudo curl --fail https://lts.dn.ipantt.net/d/221210_003_ghostunnel_sample_certs_25880/ghostunnel_ca.cer -o /etc/ghostunnel_client/ghostunnel_ca.cer
sudo curl --fail https://lts.dn.ipantt.net/d/221210_003_ghostunnel_sample_certs_25880/ghostunnel_client.pfx -o /etc/ghostunnel_client/ghostunnel_client.pfx

# イメージ取得

sudo docker pull dockervault.dn.ipantt.net/dockervault_ghostunnel_client_1_6_1_go_1_19_x64:20221210_001

# デーモンとして OS の起動時に常時起動するように登録し、実際に動作を開始
sudo docker run -d --restart always --name daemon_ghostunnel_client --log-driver=journald --log-opt tag=docker_log/{{.Name}}/{{.ID}} --network host --mount type=bind,source=/etc/ghostunnel_client/,target=/etc/ghostunnel_client/ --env GHOSTUNNEL_CLIENT_LISTEN_HOST_AND_PORT=0.0.0.0:1433 --env GHOSTUNNEL_CLIENT_TUNNELSERVER_HOST_AND_PORT=103.41.61.188:443 --env GHOSTUNNEL_CLIENT_TUNNELSERVER_CERT_DNS_NAME=Sample_GhostTunnel_Server_CN dockervault.dn.ipantt.net/dockervault_ghostunnel_client_1_6_1_go_1_19_x64:20221210_001

# デーモンとして動作しているコンテナのログの確認 (必要に応じて)
sudo docker logs -f daemon_ghostunnel_client

# デーモンとして動作しているコンテナへの bash への入り方 (デバッグ用)
sudo docker exec -it daemon_ghostunnel_client bash

# フォアグラウンドプロセスとして ghostunnel をデバッグ起動 (デバッグ用)
sudo docker run -it --rm --network host --mount type=bind,source=/etc/ghostunnel_client/,target=/etc/ghostunnel_client/ --env GHOSTUNNEL_CLIENT_LISTEN_HOST_AND_PORT=127.0.0.1:1433 --env GHOSTUNNEL_CLIENT_TUNNELSERVER_HOST_AND_PORT=103.41.61.188:443 --env GHOSTUNNEL_CLIENT_TUNNELSERVER_CERT_DNS_NAME=Sample_GhostTunnel_Server_CN dockervault.dn.ipantt.net/dockervault_ghostunnel_client_1_6_1_go_1_19_x64:20221210_001


# デーモンコンテナの停止
sudo docker stop daemon_ghostunnel_client

# デーモンコンテナの再開
sudo docker start daemon_ghostunnel_client

# 動作中のデーモンコンテナの削除
sudo docker stop daemon_ghostunnel_client
sudo docker rm daemon_ghostunnel_client



