# イメージ名
dockervault_mssqlserver_2019_for_thin_telework_system

# バージョン
20220724_001

# イメージの目的
これは、Ubuntu 20.04 環境上の Microsoft SQL Server 2019 Express の安定動作イメージである。

# 使用条件
このイメージは、シン・テレワークシステムのプログラムの一部として配布するものであり、その他の目的で使用することはできない。
このイメージには、Microsoft SQL Server 2019 Express が含まれる。

Microsoft SQL Server 2019 Express の再配布は、以下の EULA の条件に基づいて実施されている。本イメージを利用する前に、以下の EULA の内容に同意する必要がある。
https://lts.dn.ipantt.net/d/220724_003_ms_sql_server_2019_express_eula_74574/




# ビルド方法 (dn-docker1 にて)

## 初回のみ Git クローンする
cd ~/ && git clone --recursive https://github.com/IPA-CyberLab/IPA-DN-Dockers1.git

## ビルド実施
cd ~/IPA-DN-Dockers1/ && (cd $(git rev-parse --show-toplevel) && git pull origin master && git submodule update --init --recursive) && cd ~/IPA-DN-Dockers1/dockervault_mssqlserver_2019_for_thin_telework_system/ && docker build -t tmpimg01 . && echo Docker Image Build OK.

# ビルドしたマシンにおける簡易動作テスト (必要な場合のみ) - SQL Server 起動
rm -fr /var/opt/mssql/ && mkdir -p /var/opt/mssql/
docker run -it --rm --network host --mount type=bind,source=/var/opt/mssql/,target=/var/opt/mssql/ --env MSSQL_SA_PASSWORD=SqlNeko123 tmpimg01 /opt/mssql/bin/sqlservr --pid Express --reset-sa-password --accept-eula

## 無事起動したら Ctrl + C で終了

# ビルドしたマシンにおける簡易動作テスト (必要な場合のみ) - bash 起動
docker run -it --rm --network host --mount type=bind,source=/var/opt/mssql/,target=/var/opt/mssql/ --env MSSQL_SA_PASSWORD=SqlNeko123 tmpimg01 bash

## 無事起動したら Ctrl + C で終了


# イメージ公開
docker login dockervault-auth.dn.ipantt.net

docker tag tmpimg01 dockervault-auth.dn.ipantt.net/dockervault_mssqlserver_2019_for_thin_telework_system:20220724_001

docker push dockervault-auth.dn.ipantt.net/dockervault_mssqlserver_2019_for_thin_telework_system:20220724_001





# 利用方法 (dn-docker2 でテスト)

# Docker のインストール
sudo apt-get -y update && sudo apt-get -y install docker.io

# イメージ取得

# sudo rm -fr /var/opt/mssql/
sudo mkdir -p /var/opt/mssql/

sudo docker pull dockervault.dn.ipantt.net/dockervault_mssqlserver_2019_for_thin_telework_system:20220724_001

# 初回起動 (EULA に同意して SQL Server 2019 の sa パスワードを初期設定)
sudo docker run -it --rm --network host --mount type=bind,source=/var/opt/mssql/,target=/var/opt/mssql/ --env MSSQL_SA_PASSWORD=SqlNeko123 dockervault.dn.ipantt.net/dockervault_mssqlserver_2019_for_thin_telework_system:20220724_001 /opt/mssql/bin/sqlservr --pid Express --reset-sa-password --accept-eula

# 無事起動したら Ctrl + C で一度終了

# デーモンとして OS の起動時に常時起動するように登録し、実際に動作を開始
sudo docker run -d --restart always --name daemon_mssqlserver --log-driver=journald --log-opt tag=docker_log/{{.Name}}/{{.ID}} --network host --mount type=bind,source=/var/opt/mssql/,target=/var/opt/mssql/ dockervault.dn.ipantt.net/dockervault_mssqlserver_2019_for_thin_telework_system:20220724_001

# デーモンとして動作しているコンテナのログの確認 (必要に応じて)
sudo docker logs -f daemon_mssqlserver

# デーモンとして動作しているコンテナへの bash への入り方 (デバッグ用)
sudo docker exec -it daemon_mssqlserver bash

# デーモンとして動作しているコンテナへの SQLCMD の入り方 (デバッグ用)
sudo docker exec -it daemon_mssqlserver /opt/mssql-tools/bin/sqlcmd -U sa

# フォアグラウンドプロセスとして SQL Server 2019 をデバッグ起動 (デバッグ用)
sudo docker run -it --rm --network host --mount type=bind,source=/var/opt/mssql/,target=/var/opt/mssql/ dockervault.dn.ipantt.net/dockervault_mssqlserver_2019_for_thin_telework_system:20220724_001


# デーモンコンテナの停止
sudo docker stop daemon_mssqlserver

# デーモンコンテナの再開
sudo docker start daemon_mssqlserver

# 動作中のデーモンコンテナの削除
sudo docker stop daemon_mssqlserver
sudo docker rm daemon_mssqlserver

# 不要になったデータの削除 (注意！)
sudo rm -frI /var/opt/mssql/


